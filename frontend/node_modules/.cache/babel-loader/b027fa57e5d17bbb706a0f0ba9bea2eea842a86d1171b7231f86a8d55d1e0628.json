{"ast":null,"code":"var _jsxFileName = \"/home/negi/coding/majorPro/chatApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { io } from 'socket.io-client';\n\n// Initialize the socket connection to the backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  // States to hold form inputs and messages\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]); // For storing chat history\n  const [currentUser, setCurrentUser] = useState(null); // To track the logged-in user\n\n  // Handle form submission to register a new user\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      name: username,\n      email: email,\n      password: password\n    };\n    try {\n      const response = await fetch('/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n      if (!response.ok) {\n        throw new Error(\"Response is not ok\");\n      }\n      const message = await response.json();\n      console.log(message);\n      alert(message.message);\n      setCurrentUser(user.name); // Store the current username after signup\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Handle chat message submission\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim() === '') return; // Prevent sending empty messages\n\n    const messageData = {\n      user: currentUser,\n      text: message\n    };\n\n    // Emit the 'chat message' event with the message data\n    socket.emit('chat message', messageData);\n    setMessageHistory(prevHistory => [...prevHistory, messageData]); // Add own message to history\n    setMessage(\"\"); // Clear the input field after sending\n  };\n\n  // Listen for incoming messages from the server\n  useEffect(() => {\n    socket.on('receive message', msg => {\n      console.log('Received from server:', msg);\n      setMessageHistory(prevHistory => [...prevHistory, msg]); // Append the new message to history\n    });\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      socket.off('receive message'); // Use the correct event name for cleanup\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Message History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-history-container\",\n        children: messageHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-item ${msg.user === currentUser ? 'sent' : 'received'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.user === currentUser ? 'You' : msg.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), \" \", msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B9aXLSvSp5D0zurN8YMjwVeU1oU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","email","setEmail","password","setPassword","message","setMessage","messageHistory","setMessageHistory","currentUser","setCurrentUser","handleSubmit","e","preventDefault","user","name","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","console","log","alert","error","sendMessage","trim","messageData","text","emit","prevHistory","on","msg","off","className","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/home/negi/coding/majorPro/chatApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { io } from 'socket.io-client';\n\n// Initialize the socket connection to the backend\nconst socket = io('http://localhost:5000');\n\nfunction App() {\n  // States to hold form inputs and messages\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]); // For storing chat history\n  const [currentUser, setCurrentUser] = useState(null);  // To track the logged-in user\n\n  // Handle form submission to register a new user\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const user = {\n      name: username,\n      email: email,\n      password: password\n    };\n\n    try {\n      const response = await fetch('/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Response is not ok\");\n      }\n\n      const message = await response.json();\n      console.log(message);\n      alert(message.message);\n      setCurrentUser(user.name); // Store the current username after signup\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Handle chat message submission\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (message.trim() === '') return;  // Prevent sending empty messages\n\n    const messageData = {\n      user: currentUser,\n      text: message\n    };\n\n    // Emit the 'chat message' event with the message data\n    socket.emit('chat message', messageData);\n    setMessageHistory(prevHistory => [...prevHistory, messageData]); // Add own message to history\n    setMessage(\"\");  // Clear the input field after sending\n  };\n\n  // Listen for incoming messages from the server\n  useEffect(() => {\n    socket.on('receive message', (msg) => {\n      console.log('Received from server:', msg);\n      setMessageHistory(prevHistory => [...prevHistory, msg]);  // Append the new message to history\n    });\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      socket.off('receive message');  // Use the correct event name for cleanup\n    };\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      {/* Sign Up Form */}\n      <form onSubmit={handleSubmit} className=\"signup-form\">\n        <input\n          type='text'\n          placeholder='Username'\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type='email'\n          placeholder='Email'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n\n      {/* Chat Section */}\n      <form onSubmit={sendMessage} className=\"chat-form\">\n        <input\n          type='text'\n          placeholder='Write message...'\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send Message</button>\n      </form>\n\n      {/* Display received chat message history */}\n      <div className=\"message-history\">\n        <h3>Message History:</h3>\n        <div className=\"message-history-container\">\n          {messageHistory.map((msg, index) => (\n            <div\n              key={index}\n              className={`message-item ${msg.user === currentUser ? 'sent' : 'received'}`}\n            >\n              <strong>{msg.user === currentUser ? 'You' : msg.user}:</strong> {msg.text}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}