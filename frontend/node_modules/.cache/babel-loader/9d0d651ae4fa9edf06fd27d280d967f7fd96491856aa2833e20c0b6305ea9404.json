{"ast":null,"code":"var _jsxFileName = \"/home/negi/coding/majorPro/chatApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { io } from 'socket.io-client';\n\n// Initialize the socket connection to the backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Connecting to the backend Socket.io server\n\nfunction App() {\n  _s();\n  // States to hold form inputs and messages\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [receivedMessage, setReceivedMessage] = useState(\"\"); // For displaying received chat messages\n\n  // Handle form submission to register a new user\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      name: username,\n      email: email,\n      password: password\n    };\n    try {\n      const response = await fetch('/signup', {\n        // Using full backend URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n      if (!response.ok) {\n        throw new Error(\"Response is not ok\");\n      }\n      const message = await response.json();\n      console.log(message);\n      alert(message.message); // Show an alert when signup is successful\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Handle chat message submission\n  const sendMessage = e => {\n    e.preventDefault();\n    socket.emit('chat message', message); // Emit the 'chat message' event with the message data\n    setMessage(\"\"); // Clear the input field after sending\n  };\n\n  // Listen for incoming messages from the server\n  useEffect(() => {\n    // Listen for the 'chat message' event\n    socket.on('chat message', msg => {\n      console.log('Received from server:', msg);\n      setReceivedMessage(msg); // Update state with received message\n    });\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      socket.off('chat message');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4qj1Jy3I1H//aDdl/bJL3cfL65k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","email","setEmail","password","setPassword","message","setMessage","receivedMessage","setReceivedMessage","handleSubmit","e","preventDefault","user","name","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","console","log","alert","error","sendMessage","emit","on","msg","off","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/negi/coding/majorPro/chatApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { io } from 'socket.io-client';\n\n// Initialize the socket connection to the backend\nconst socket = io('http://localhost:5000');  // Connecting to the backend Socket.io server\n\nfunction App() {\n  // States to hold form inputs and messages\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [receivedMessage, setReceivedMessage] = useState(\"\");  // For displaying received chat messages\n\n  // Handle form submission to register a new user\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const user = {\n      name: username,\n      email: email,\n      password: password\n    };\n\n    try {\n      const response = await fetch('/signup', {  // Using full backend URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Response is not ok\");\n      }\n\n      const message = await response.json();\n      console.log(message);\n      alert(message.message);  // Show an alert when signup is successful\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Handle chat message submission\n  const sendMessage = (e) => {\n    e.preventDefault();\n    socket.emit('chat message', message);  // Emit the 'chat message' event with the message data\n    setMessage(\"\");  // Clear the input field after sending\n  };\n\n  // Listen for incoming messages from the server\n  useEffect(() => {\n    // Listen for the 'chat message' event\n    socket.on('chat message', (msg) => {\n      console.log('Received from server:', msg);\n      setReceivedMessage(msg);  // Update state with received message\n    });\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      socket.off('chat message');\n    };\n  }, []);\n\n  return (\n    <div>\n      {/* Sign Up Form */}\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Username'\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type='email'\n          placeholder='Email'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n\n      {/* Chat Section */}\n      <form onSubmit={sendMessage}>\n        <input\n          type='text'\n          placeholder='Write message'\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send Message</button>\n      </form>\n\n      {/* Display received chat message */}\n      <div>\n        <h3>Received Message:</h3>\n        <p>{receivedMessage}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}