{"ast":null,"code":"var _jsxFileName = \"/home/negi/coding/majorPro/chatApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { io } from 'socket.io-client';\n\n// Initialize the socket connection to the backend\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  // States to hold form inputs and messages\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]); // For storing chat history\n  const [currentUser, setCurrentUser] = useState(null); // To track the logged-in user\n  const [IsSignedIn, setIsSignedIn] = useState(false); // Track sign-in status\n\n  // Handle form submission to register a new user\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      name: username,\n      email: email,\n      password: password\n    };\n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n      if (!response.ok) {\n        throw new Error(\"Response is not ok\");\n      }\n      const message = await response.json();\n      console.log(message);\n      alert(message.message);\n      setCurrentUser(user.name); // Store the current username after signup\n      setIsSignedIn(true); // Set the signed-in state to true\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error signing up: \" + error.message); // Show specific error message\n    }\n  };\n\n  // Handle chat message submission\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim() === '') return; // Prevent sending empty messages\n\n    const messageData = {\n      user: currentUser,\n      text: message\n    };\n\n    // Emit the 'chat message' event with the message data\n    socket.emit('chat message', messageData);\n    setMessageHistory(prevHistory => [...prevHistory, messageData]); // Add own message to history\n    setMessage(\"\"); // Clear the input field after sending\n  };\n\n  // Listen for incoming messages from the server\n  useEffect(() => {\n    socket.on('receive message', msg => {\n      console.log('Received from server:', msg);\n      setMessageHistory(prevHistory => [...prevHistory, msg]); // Append the new message to history\n    });\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      socket.off('receive message'); // Use the correct event name for cleanup\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: IsSignedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Message History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageHistoryContainer\",\n        children: messageHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${msg.user === currentUser ? 'yourText' : 'otherText'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sendMessageBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"messageInp\",\n            type: \"text\",\n            placeholder: \"Write message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"sendBtn\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"signup-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"formTitle\",\n          children: \"Sign-Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formInputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"credInputs\",\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"credInputs\",\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"credInputs\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signUpBtn\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2twYVCFCDmbpaAZ7EcLkGeAL+eY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","App","_s","username","setUsername","email","setEmail","password","setPassword","message","setMessage","messageHistory","setMessageHistory","currentUser","setCurrentUser","IsSignedIn","setIsSignedIn","handleSubmit","e","preventDefault","user","name","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","console","log","alert","error","sendMessage","trim","messageData","text","emit","prevHistory","on","msg","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/negi/coding/majorPro/chatApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { io } from 'socket.io-client';\n\n// Initialize the socket connection to the backend\nconst socket = io('http://localhost:5000');\n\nfunction App() {\n  // States to hold form inputs and messages\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageHistory, setMessageHistory] = useState([]); // For storing chat history\n  const [currentUser, setCurrentUser] = useState(null);  // To track the logged-in user\n  const [IsSignedIn, setIsSignedIn] = useState(false); // Track sign-in status\n\n  // Handle form submission to register a new user\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const user = {\n      name: username,\n      email: email,\n      password: password\n    };\n\n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Response is not ok\");\n      }\n\n      const message = await response.json();\n      console.log(message);\n      alert(message.message);\n      setCurrentUser(user.name); // Store the current username after signup\n      setIsSignedIn(true); // Set the signed-in state to true\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error signing up: \" + error.message); // Show specific error message\n    }\n  };\n\n  // Handle chat message submission\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (message.trim() === '') return;  // Prevent sending empty messages\n\n    const messageData = {\n      user: currentUser,\n      text: message\n    };\n\n    // Emit the 'chat message' event with the message data\n    socket.emit('chat message', messageData);\n    setMessageHistory(prevHistory => [...prevHistory, messageData]); // Add own message to history\n    setMessage(\"\");  // Clear the input field after sending\n  };\n\n  // Listen for incoming messages from the server\n  useEffect(() => {\n    socket.on('receive message', (msg) => {\n      console.log('Received from server:', msg);\n      setMessageHistory(prevHistory => [...prevHistory, msg]);  // Append the new message to history\n    });\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      socket.off('receive message');  // Use the correct event name for cleanup\n    };\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      {IsSignedIn ? \n        (\n          <div className='chatWrapper'>\n            {/* Display received chat message history */}\n            <h3>Message History:</h3>\n            <div className=\"messageHistoryContainer\">\n              {messageHistory.map((msg, index) => (\n                <div\n                  key={index}\n                  className={`${msg.user === currentUser ? 'yourText' : 'otherText'}`}\n                >\n                  <p className='message'>{msg.text}</p>\n                </div>\n              ))}\n            </div>\n\n            {/* Chat Section */}\n            <form onSubmit={sendMessage} className=\"chatBox\">\n              <div className='sendMessageBox'>\n                <input\n                  className='messageInp'\n                  type='text'\n                  placeholder='Write message...'\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                />\n                <button type=\"submit\" className='sendBtn'>Send</button>\n              </div>\n            </form>\n          </div>\n        ) :\n        (\n          <>\n            {/* Sign Up Form */}\n            <form onSubmit={handleSubmit} className=\"signup-form\">\n              <p className='formTitle'>Sign-Up</p>\n              <div className='formInputs'>\n                <input\n                  className='credInputs'\n                  type='text'\n                  placeholder='Username'\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n                <input\n                  className='credInputs'\n                  type='email'\n                  placeholder='Email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n                <input\n                  className='credInputs'\n                  type='password'\n                  placeholder='Password'\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n              <button type=\"submit\" className='signUpBtn'>Sign Up</button>\n            </form>\n          </>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}