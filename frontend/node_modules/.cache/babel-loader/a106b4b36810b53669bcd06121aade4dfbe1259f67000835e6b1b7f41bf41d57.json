{"ast":null,"code":"var _jsxFileName = \"/home/negi/coding/majorPro/chatApp/frontend/src/components/Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Messages = () => {\n  _s();\n  // State to track current message input\n  const [message, setMessage] = useState(\"\");\n\n  // State to store the list of messages\n  const [messageHistory, setMessageHistory] = useState([]);\n\n  // Static user for this example\n  const currentUser = 'User1'; // You can replace this with dynamic user data\n\n  // Function to handle sending message\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim() === '') return; // Prevent sending empty messages\n\n    const messageData = {\n      user: currentUser,\n      text: message\n    };\n\n    // Emit the message to the server via socket\n    socket.emit('chat message', messageData);\n\n    // Add the sent message to the message history\n    setMessageHistory(prevHistory => [...prevHistory, messageData]);\n\n    // Clear the input field\n    setMessage(\"\");\n  };\n  useEffect(() => {\n    // Listen for messages from the server\n    socket.on('receive message', msg => {\n      setMessageHistory(prevHistory => [...prevHistory, msg]);\n    });\n\n    // Cleanup the listener when the component unmounts\n    return () => {\n      socket.off('receive message');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-box\",\n      children: messageHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.user === currentUser ? \"sent-message\" : \"received-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user === currentUser ? 'You' : msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"y8ccmnkhV0yj7N+Floa7tP0GVkc=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Messages","_s","message","setMessage","messageHistory","setMessageHistory","currentUser","sendMessage","e","preventDefault","trim","messageData","user","text","emit","prevHistory","on","msg","off","children","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/negi/coding/majorPro/chatApp/frontend/src/components/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nconst socket = io('http://localhost:5000');\n\nconst Messages = () => {\n    // State to track current message input\n    const [message, setMessage] = useState(\"\");\n\n    // State to store the list of messages\n    const [messageHistory, setMessageHistory] = useState([]);\n\n    // Static user for this example\n    const currentUser = 'User1'; // You can replace this with dynamic user data\n\n    // Function to handle sending message\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message.trim() === '') return; // Prevent sending empty messages\n    \n        const messageData = {\n          user: currentUser,\n          text: message,\n        };\n    \n        // Emit the message to the server via socket\n        socket.emit('chat message', messageData);\n\n        // Add the sent message to the message history\n        setMessageHistory((prevHistory) => [...prevHistory, messageData]);\n\n        // Clear the input field\n        setMessage(\"\");\n    };\n\n    useEffect(() => {\n        // Listen for messages from the server\n        socket.on('receive message', (msg) => {\n          setMessageHistory((prevHistory) => [...prevHistory, msg]);\n        });\n    \n        // Cleanup the listener when the component unmounts\n        return () => {\n          socket.off('receive message');\n        };\n    }, []);\n\n  return (\n    <div>\n        {/* Displaying the message history */}\n        <div className=\"message-box\">\n          {messageHistory.map((msg, index) => (\n        <div key={index} className={msg.user === currentUser ? \"sent-message\" : \"received-message\"}>\n            {/* Differentiate messages sent by the user and received from others */}\n            <strong>{msg.user === currentUser ? 'You' : msg.user}:</strong> {msg.text}\n        </div>\n    ))}\n</div>\n\n        {/* Input form to send messages */}\n        <form onSubmit={sendMessage}>\n            <input \n                type='text' \n                value={message} \n                onChange={(e) => setMessage(e.target.value)} \n                placeholder=\"Type your message...\"\n            />\n            <button type=\"submit\">Send</button>\n        </form>\n    </div>\n  )\n}\n\nexport default Messages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}